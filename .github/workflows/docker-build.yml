name: Build and Publish Refiner Service Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git reference to checkout (branch, tag, or SHA)'
        required: true
        default: 'main'
      stable_release:
        description: 'Mark this build as a stable release'
        required: false
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}

      - name: Get current commit SHA
        id: current_sha
        run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Get branch name
        id: branch_name
        run: echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SERVICE_ACCOUNT_PAT }}

      - name: Set Docker image tags
        id: tags
        run: |
          TAGS="${{ vars.DOCKERHUB_USERNAME }}/vana-refinement-service:${{ steps.current_sha.outputs.sha }}"
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.event.inputs.ref }}" == "main" ]]; then
            TAGS="$TAGS,${{ vars.DOCKERHUB_USERNAME }}/vana-refinement-service:latest"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAGS="$TAGS,${{ vars.DOCKERHUB_USERNAME }}/vana-refinement-service:${{ steps.branch_name.outputs.branch }}-${{ steps.current_sha.outputs.sha }}"
          fi
          if [[ "${{ github.event.inputs.stable_release }}" == "true" ]]; then
            TAGS="$TAGS,${{ vars.DOCKERHUB_USERNAME }}/vana-refinement-service:stable"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.tags.outputs.tags }}